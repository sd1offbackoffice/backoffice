CREATE OR REPLACE PROCEDURE sp_transfer_pkmprodbaru_mig (
   p_kodeigr    IN     VARCHAR2,
   p_userid     IN     VARCHAR2,
   p_nousulan      OUT VARCHAR2,
   p_err           OUT VARCHAR2)
IS
   no_usulan      VARCHAR2 (11);
   temp           NUMBER;
   mindis         NUMBER;
   minor          NUMBER;
   acost          NUMBER (8, 2);
   kdiv           VARCHAR2 (2);
   kdep           VARCHAR2 (2);
   kkat           VARCHAR2 (2);
   flaggudang     VARCHAR2 (2);
   ADA            NUMBER;
   ada_plu        NUMBER;
   LEADTIME       NUMBER;
   KSUP           VARCHAR2 (5);
   N              NUMBER;
   mplus_exists   NUMBER;

   mail_err       BOOLEAN := FALSE;

   v_cabang       VARCHAR2 (100);
   v_sender       VARCHAR2 (100);
   v_receiver     VARCHAR2 (100);
   v_headmail     VARCHAR2 (1000);
   v_bodymail     VARCHAR2 (10000);

   f              UTL_FILE.file_type;
   v_directory    VARCHAR2 (100);
   v_file         VARCHAR2 (100);
   v_dirpath      VARCHAR2 (100);

   c_ipserver     VARCHAR2 (100);
   c_dbuser       VARCHAR2 (100);
   c_dbpass       VARCHAR2 (100);

   p_session      VARCHAR2 (100);
   l_blob         t_file_transfer.ftfile%TYPE;
BEGIN
   SELECT prs_namacabang
     INTO v_cabang
     FROM tbmaster_perusahaan
    WHERE prs_kodeigr = p_kodeigr;

   SELECT DISTINCT nousulan
     INTO no_usulan
     FROM tbtemp_pkmbaru_migrasi
    WHERE kodeigr = p_kodeigr;

   p_nousulan := no_usulan;

   DELETE FROM tbtr_usulanpkmbaru
         WHERE pkmn_nousulan = no_usulan;


   INSERT INTO tbtr_usulanpkmbaru (pkmn_kodeigr,
                                   pkmn_nousulan,
                                   pkmn_tglusulan,
                                   pkmn_prdcd,
                                   pkmn_mpkm,
                                   pkmn_pkm,
                                   pkmn_mplus_i,
                                   pkmn_mplus_o,
                                   pkmn_pkmt,
                                   pkmn_create_by,
                                   pkmn_create_dt,
                                   pkmn_modify_by,
                                   pkmn_modify_dt)
      SELECT kodeigr,
             nousulan,
             TO_DATE (tglusulan, 'dd-mm-yyyy') tglusulan,
             LPAD (SUBSTR (prdcd, 1, 7), 7, '0') prdcd,
             TO_NUMBER (mpkm) mpkm,
             TO_NUMBER (pkm) pkm,
             TO_NUMBER (mplus_i) mplus_i,
             TO_NUMBER (mplus_o) mplus_o,
             TO_NUMBER (pkmt) pkmt,
             create_by,
             TO_DATE (create_dt, 'dd-mm-yyyy') create_dt,
             p_userid,
             SYSDATE
        FROM tbtemp_pkmbaru_migrasi
       WHERE kodeigr = p_kodeigr;

   FOR rec IN (SELECT *
                 FROM tbtr_usulanpkmbaru
                WHERE pkmn_nousulan = no_usulan)
   LOOP
      N := 2;
      mindis := 0;
      minor := 0;

      SELECT COUNT (1)
        INTO ada_plu
        FROM tbmaster_prodmast
       WHERE prd_prdcd = rec.pkmn_prdcd;

      IF ada_plu > 0
      THEN
         SELECT prd_kodedivisi,
                prd_kodedepartement,
                prd_kodekategoribarang,
                CASE
                   WHEN NVL (PRD_MINORDER, 0) = 0 THEN PRD_ISIBELI
                   ELSE PRD_MINORDER
                END
                   MINORD,
                PRD_FLAGGUDANG
           INTO kdiv,
                kdep,
                kkat,
                minor,
                flaggudang
           FROM tbmaster_prodmast
          WHERE prd_prdcd = rec.pkmn_prdcd;
      END IF;


      SELECT NVL (COUNT (1), 0)
        INTO ADA
        FROM TBMASTER_LOKASI
       WHERE     LKS_KODEIGR = rec.pkmn_KODEIGR
             AND LKS_PRDCD = rec.pkmn_prdcd
             AND (    LKS_KODERAK NOT LIKE 'X%'
                  AND LKS_KODERAK NOT LIKE 'A%'
                  AND LKS_KODERAK NOT LIKE 'G%')
             AND LKS_TIPERAK <> 'S';

      IF NVL (ADA, 0) = 0
      THEN
         mindis := 0;
      ELSE
           SELECT NVL (SUM (NILAI), 0)
             INTO mindis
             FROM (SELECT LKS_PRDCD,
                          (  LKS_TIRKIRIKANAN
                           * LKS_TIRDEPANBELAKANG
                           * LKS_TIRATASBAWAH)
                             NILAI
                     FROM TBMASTER_LOKASI
                    WHERE     LKS_KODEIGR = rec.pkmn_KODEIGR
                          AND LKS_PRDCD = rec.pkmn_prdcd
                          AND (    LKS_KODERAK NOT LIKE 'X%'
                               AND LKS_KODERAK NOT LIKE 'A%'
                               AND LKS_KODERAK NOT LIKE 'G%')
                          AND LKS_TIPERAK <> 'S')
         GROUP BY LKS_PRDCD;
      END IF;

      IF NVL (flaggudang, 'N') IN ('Y', 'P')
      THEN
         LEADTIME := 15;
      ELSE
         SELECT COUNT (1)
           INTO ADA
           FROM (SELECT *
                   FROM (  SELECT HGB_KODESUPPLIER
                             FROM TBMASTER_HARGABELI
                            WHERE     HGB_KODEIGR = rec.pkmn_KODEIGR
                                  AND HGB_PRDCD = rec.pkmn_prdcd
                         ORDER BY HGB_TIPE)
                  WHERE ROWNUM = 1) A,
                TBMASTER_SUPPLIER
          WHERE     SUP_KODEIGR = rec.pkmn_KODEIGR
                AND SUP_KODESUPPLIER = HGB_KODESUPPLIER;

         IF NVL (ADA, 0) = 0
         THEN
            LEADTIME := 1;
            KSUP := '';
         ELSE
            SELECT SUP_JANGKAWAKTUKIRIMBARANG, SUP_KODESUPPLIER
              INTO LEADTIME, KSUP
              FROM (SELECT *
                      FROM (  SELECT HGB_KODESUPPLIER
                                FROM TBMASTER_HARGABELI
                               WHERE     HGB_KODEIGR = rec.pkmn_KODEIGR
                                     AND HGB_PRDCD = rec.pkmn_prdcd
                            ORDER BY HGB_TIPE)
                     WHERE ROWNUM = 1) A,
                   TBMASTER_SUPPLIER
             WHERE     SUP_KODEIGR = rec.pkmn_KODEIGR
                   AND SUP_KODESUPPLIER = HGB_KODESUPPLIER;
         END IF;
      END IF;

      UPDATE tbtr_usulanpkmbaru
         SET pkmn_mindis = mindis, pkmn_minor = minor
       WHERE     pkmn_kodeigr = rec.pkmn_KODEIGR
             AND pkmn_nousulan = rec.pkmn_NOUSULAN
             AND pkmn_prdcd = rec.pkmn_PRDCD;

      IF ada_plu > 0
      THEN
         IF rec.pkmn_mpkm >= mindis + minor
         THEN
            --insert/update
            SELECT COUNT (1)
              INTO temp
              FROM tbmaster_kkpkm
             WHERE pkm_prdcd = rec.PKMN_PRDCD;

            -- get mindis minor

            IF temp = 0
            THEN
               INSERT INTO TBMASTER_KKPKM (PKM_KODEIGR,
                                           PKM_KODEDIVISI,
                                           PKM_KODEDEPARTEMENT,
                                           PKM_PERIODEPROSES,
                                           PKM_KODEKATEGORIBARANG,
                                           PKM_PRDCD,
                                           PKM_KODESUPPLIER,
                                           PKM_MINDISPLAY,
                                           PKM_MINORDER,
                                           PKM_LEADTIME,
                                           PKM_KOEFISIEN,
                                           PKM_PKM,
                                           PKM_PKMT,
                                           PKM_MPKM,
                                           PKM_QTYMPLUS,
                                           PKM_CREATE_BY,
                                           PKM_CREATE_DT,
                                           pkm_last_pkm)
                    VALUES (rec.pkmn_KODEIGR,
                            kdiv,
                            kdep,
                            TO_CHAR (SYSDATE, 'MMyyyy'),
                            kkat,
                            REC.pkmn_prdcd,
                            KSUP,
                            mindis,
                            minor,
                            LEADTIME,
                            N,
                            rec.PKMN_PKM,
                            rec.PKMN_PKMT,
                            rec.PKMN_MPKM,
                            rec.PKMN_MPLUS_I + rec.PKMN_MPLUS_O,
                            p_userid,
                            SYSDATE,
                            rec.PKMN_PKM);
            ELSE
               UPDATE tbmaster_kkpkm
                  SET pkm_pkm = rec.PKMN_PKM,
                      pkm_mpkm = rec.PKMN_MPKM,
                      pkm_pkmt = rec.PKMN_PKMT,
                      PKM_QTYMPLUS = rec.PKMN_MPLUS_I + rec.PKMN_MPLUS_O,
                      pkm_last_pkm = rec.PKMN_PKM,
                      pkm_adjust_by = 'HO',
                      pkm_adjust_dt = SYSDATE,
                      pkm_modify_by = p_userid,
                      pkm_modify_dt = SYSDATE
                WHERE pkM_prdcd = rec.pkmn_prdcd;
            END IF;
         ELSE
            --errmsg
            --update usulan keterangn
            UPDATE tbtr_usulanpkmbaru
               SET PKMN_keterangan = 'Qty MPKM < mindis+minor',
                   PKMN_MODIFY_DT = SYSDATE,
                   PKMN_MODIFY_BY = p_userid
             WHERE     pkmn_kodeigr = rec.pkmn_KODEIGR
                   AND pkmn_nousulan = rec.pkmn_NOUSULAN
                   AND pkmn_prdcd = rec.pkmn_PRDCD;

            mail_err := TRUE;
         END IF;


         ----update tbtr_mplus ----

         IF rec.PKMN_mplus_I IS NOT NULL OR rec.PKMN_mplus_O IS NOT NULL
         THEN
            SELECT COUNT (1)
              INTO temp
              FROM tbmaster_pkmplus
             WHERE pkmp_prdcd = rec.pkmn_prdcd;

            IF temp = 0
            THEN
               INSERT INTO tbmaster_pkmplus (pkmp_kodeigr,
                                             pkmp_kodedivisi,
                                             pkmp_kodedepartemen,
                                             pkmp_kodekategoribrg,
                                             pkmp_prdcd,
                                             pkmp_qtyminor,
                                             pkmp_mplusi,
                                             pkmp_mpluso,
                                             pkmp_create_by,
                                             pkmp_create_dt)
                    VALUES (rec.pkmn_kodeigr,
                            kdiv,
                            kdep,
                            kkat,
                            rec.PKMN_PRDCD,
                            rec.PKMN_mplus_I + rec.PKMN_mplus_O,
                            rec.PKMN_mplus_I,
                            rec.PKMN_mplus_O,
                            'HO',
                            SYSDATE);
            ELSE
               UPDATE tbmaster_pkmplus
                  SET pkmp_qtyminor = rec.PKMN_mplus_I + rec.PKMN_mplus_O,
                      pkmp_mplusi =
                         CASE
                            WHEN rec.PKMN_mplus_I IS NOT NULL
                            THEN
                               rec.PKMN_mplus_I
                            ELSE
                               pkmp_mplusi
                         END,
                      pkmp_mpluso = CASE
                            WHEN rec.PKMN_mplus_O IS NOT NULL
                            THEN
                               rec.PKMN_mplus_O
                            ELSE
                               pkmp_mpluso
                         END,
                      pkmp_modify_by = 'HO',
                      pkmp_modify_dt = SYSDATE
                WHERE pkMp_prdcd = rec.pkmn_prdcd;
            END IF;
         END IF;
      ELSE
         --errmsg
         --update usulan keterangn
         UPDATE tbtr_usulanpkmbaru
            SET PKMN_keterangan = 'PLU tidak ada di prodmast',
                PKMN_MODIFY_DT = SYSDATE,
                PKMN_MODIFY_BY = p_userid
          WHERE     pkmn_kodeigr = rec.pkmn_KODEIGR
                AND pkmn_nousulan = rec.pkmn_NOUSULAN
                AND pkmn_prdcd = rec.pkmn_PRDCD;

         mail_err := TRUE;
      END IF;
   END LOOP;

   COMMIT;

   ---- Email kalau qty edit < mindis+minor dan mplus tidak diupdate karna sudah ada acost nya
   IF mail_err
   THEN
      v_sender := 'tolakanPKMBaru@oraigr.mail';

      v_headmail :=
         'Tolakan PKM Produk Baru ' || v_cabang || ' (' || p_kodeigr || ')';

      v_bodymail :=
            'Berikut tolakan PKM Produk Baru no.usulan '
         || no_usulan
         || ' '
         || v_cabang
         || '  '
         || CHR (13)
         || CHR (10)
         || CHR (13)
         || CHR (10);

      ----

      ----- create file

      v_directory := 'IGRCRM';

      v_file := 'tolakanPKM_' || no_usulan || '.txt';

      SELECT directory_path
        INTO v_dirpath
        FROM all_directories
       WHERE directory_name = v_directory;

      f := UTL_FILE.fopen (v_directory, v_file, 'w');

      ----

      FOR rec
         IN (SELECT pkmn_kodeigr,
                    pkmn_nousulan,
                    pkmn_prdcd,
                    pkmn_mpkm,
                    pkmn_mindis,
                    pkmn_minor,
                    prd_deskripsipanjang
               FROM tbtr_usulanpkmbaru, tbmaster_prodmast
              WHERE     pkmn_nousulan = no_usulan
                    AND pkmn_prdcd = prd_prdcd
                    AND pkmn_mpkm < pkmn_mindis + pkmn_minor)
      LOOP
         UTL_FILE.put_line (
            f,
               'PLU : '
            || rec.pkmn_prdcd
            || ' - '
            || rec.prd_deskripsipanjang
            || CHR (13)
            || CHR (10)
            || 'Tolakan : qty PKM ( '
            || rec.pkmn_mpkm
            || ' ) < min display ('
            || rec.pkmn_mindis
            || ') + min order ('
            || rec.pkmn_minor
            || ')'
            || CHR (13)
            || CHR (10)
            || CHR (13)
            || CHR (10));
      END LOOP;

      FOR rec IN (SELECT pkmn_kodeigr, pkmn_nousulan, pkmn_prdcd
                    FROM tbtr_usulanpkmbaru
                   WHERE     pkmn_nousulan = no_usulan
                         AND NOT EXISTS
                                (SELECT 1
                                   FROM tbmaster_prodmast
                                  WHERE prd_prdcd = pkmn_prdcd))
      LOOP
         UTL_FILE.put_line (
            f,
               'PLU : '
            || rec.pkmn_prdcd
            || CHR (13)
            || CHR (10)
            || 'Tolakan : tidak terdafat di prodmast '
            || CHR (13)
            || CHR (10)
            || CHR (13)
            || CHR (10));
      END LOOP;

      ----


      UTL_FILE.fclose (f);

      ----

      SELECT LOWER (ip_server_db), LOWER (db_user_name), LOWER (db_password)
        INTO c_ipserver, c_dbuser, c_dbpass
        FROM igr_setup_db;

      p_session := TO_CHAR (USERENV ('SESSIONID'));

      DELETE FROM t_file_transfer
            WHERE ftuser = p_session;

      INSERT INTO t_file_transfer (ftuser, ftfile)
           VALUES (p_session, EMPTY_BLOB ());

      COMMIT;

      filetools.loadblob (v_dirpath || v_file,
                          p_session,
                          c_ipserver,
                          c_dbuser,
                          c_dbpass);

      SELECT ftfile
        INTO l_blob
        FROM t_file_transfer
       WHERE ftuser = p_session;

      FOR rec IN (SELECT UPPER (eml_email) email
                    FROM tbmaster_email
                   --WHERE eml_user LIKE 'ARIEADI%'
                   WHERE eml_user = 'INVENTORY HO')
      LOOP
         v_receiver := rec.email;

         send_mail_atchzip (v_receiver,
                            v_sender,
                            v_headmail,
                            v_bodymail,
                            v_file,
                            'txt',
                            l_blob);
      --         send_mail (v_sender,
      --                    v_receiver,
      --                    v_headmail,
      --                    v_bodymail);
      END LOOP;
   END IF;
EXCEPTION
   WHEN OTHERS
   THEN
      ROLLBACK;
      p_err := SQLERRM;
END;
/
