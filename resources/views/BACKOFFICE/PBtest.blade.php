VLPLU := FALSE;

IF PPLU IS NULL
THEN
DC_ALERT.OK ('PLU tidak boleh dikosongkan');
RAISE FORM_TRIGGER_FAILURE;
END IF;

FOR REC IN (SELECT *
FROM TBMASTER_PRODMAST,
(SELECT PRC_PLUIGR PLUOMI
FROM TBMASTER_PRODCRM
WHERE PRC_KODEIGR = :PARAMETER.KODEIGR
AND PRC_PLUIGR = PPLU
AND PRC_GROUP = 'O'),
(SELECT PRC_PLUIGR PLUIDM
FROM TBMASTER_PRODCRM
WHERE PRC_KODEIGR = :PARAMETER.KODEIGR
AND PRC_PLUIGR = PPLU
AND PRC_GROUP = 'I'),
TBMASTER_TAG,
(SELECT   SUBSTR (DPRO_PLU, 1, 6) || '0' AS PRDCD,
MAX (HPRO_TGLMULAI) AS TGLAWAL, MAX (HPRO_TGLAKHIR) AS TGLAKHIR
FROM TBMASTER_PROMOSI_HDR HDR, TBMASTER_PROMOSI_DTL DTL
WHERE HDR.HPRO_KODEIGR = DTL.DPRO_KODEIGR
AND HDR.HPRO_DOCNO = DTL.DPRO_DOCNO
AND HDR.HPRO_KODEIGR = :PARAMETER.KODEIGR
GROUP BY SUBSTR (DPRO_PLU, 1, 6) || '0') PROMO,
TBMASTER_KATEGORITOKO,
TBMASTER_KKPKM,
(SELECT DISTINCT (GDL_PRDCD) GDL_PRDCD
FROM TBTR_GONDOLA
WHERE GDL_KODEIGR = :PARAMETER.KODEIGR
AND (GDL_TGLAWAL - 3 <= :TGLPB AND GDL_TGLAKHIR - 7 >= :TGLPB)) GND,
TBTR_PKMGONDOLA,
TBMASTER_SUPPLIER,
TBMASTER_MINIMUMORDER,
TBMASTER_STOCK,
TBMASTER_HARGABELI
WHERE PRD_PRDCD = PLUOMI(+)
AND PRD_PRDCD = PLUIDM(+)
AND PRD_KODEIGR = TAG_KODEIGR(+)
AND PRD_KODETAG = TAG_KODETAG(+)
AND PRD_PRDCD = PROMO.PRDCD(+)
AND PRD_KATEGORITOKO = KTK_KODEKATEGORITOKO(+)
AND PRD_KODEIGR = PKM_KODEIGR(+)
AND PRD_PRDCD = PKM_PRDCD(+)
AND PRD_PRDCD = GDL_PRDCD(+)
AND PRD_KODEIGR = PKMG_KODEIGR(+)
AND PRD_PRDCD = PKMG_PRDCD(+)
AND PRD_KODEIGR = SUP_KODEIGR(+)
AND PRD_KODESUPPLIER = SUP_KODESUPPLIER(+)
AND PRD_KODEIGR = MIN_KODEIGR(+)
AND PRD_PRDCD = MIN_PRDCD(+)
AND PRD_KODEIGR = ST_KODEIGR(+)
AND PRD_PRDCD = ST_PRDCD(+)
AND '01' = ST_LOKASI(+)
AND PRD_KODEIGR = HGB_KODEIGR(+)
AND PRD_PRDCD = HGB_PRDCD(+)
AND '2' = HGB_TIPE(+)
AND PRD_KODEIGR = :PARAMETER.KODEIGR
AND PRD_PRDCD = PPLU)
LOOP
VLPLU := TRUE;

IF REC.PRD_RECORDID = '1'
THEN
DC_ALERT.OK ('PLU [' || PPLU || '] tidak boleh ORDER', 'PRD_RECORDID = 1');
RAISE FORM_TRIGGER_FAILURE;
END IF;

IF REC.PRD_KODETAG IS NOT NULL AND Trim (REC.TAG_TIDAKBOLEHORDER) = 'Y'
THEN
DC_ALERT.OK ('PLU [' || PPLU || '] TAG tidak boleh ORDER',
'PRD_KODETAG= Tidak Boleh Order'
);
RAISE FORM_TRIGGER_FAILURE;
END IF;

IF REC.PRD_KODEKATEGORIBARANG = 'C'
THEN
DC_ALERT.OK ('PLU [' || PPLU || '] Counter tidak boleh ORDER', 'Barang Counter');
RAISE FORM_TRIGGER_FAILURE;
END IF;

IF REC.PRD_FLAGGUDANG IN ('Y', 'P') AND :FLAG <> '2'
THEN
DC_ALERT.OK ('PLU [' || PPLU || '] Gudang Pusat tidak boleh ORDER', 'Gudang Pusat');
RAISE FORM_TRIGGER_FAILURE;
END IF;

IF REC.PRD_FLAGGUDANG NOT IN ('Y', 'P') AND :FLAG = '2'
THEN
DC_ALERT.OK ('PLU [' || PPLU || '] tidak boleh ORDER', 'Gudang Pusat');
RAISE FORM_TRIGGER_FAILURE;
END IF;

--->>>> Cek Kategori Toko <<<<---
IF NVL (REC.PRD_KATEGORITOKO, ' ') = ' ' AND NVL (REC.PRD_KODECABANG, ' ') = ' '
THEN
DC_ALERT.OK ('PLU [' || PPLU || '] tidak boleh ORDER', 'Kategori Toko');
RAISE FORM_TRIGGER_FAILURE;
END IF;

IF NVL (REC.PRD_KATEGORITOKO, ' ') <> ' '
THEN
IF NVL (REC.KTK_KODEKATEGORITOKO, ' ') = ' '
THEN
DC_ALERT.OK ('PLU [' || PPLU || '], Kategori Barang tidak terdaftar',
'Kategori Barang'
);
RAISE FORM_TRIGGER_FAILURE;
END IF;

IF INSTR (REC.KTK_CLASSKODEIGR, :PARAMETER.KODEIGR) = 0
THEN
DC_ALERT.OK ('PLU [' || PPLU || '] Kategori Barang tidak sesuai',
'Kategori Barang');
RAISE FORM_TRIGGER_FAILURE;
END IF;
END IF;

--->>> ------------------ <<<----
IF REC.PRD_FLAGBARANGORDERTOKO = 'Y'
THEN
DC_ALERT.OK ('PLU [' || PPLU || '] tidak boleh Order', 'ORDER TOKO');
RAISE FORM_TRIGGER_FAILURE;
END IF;

IF NVL (REC.PKM_PRDCD, ' ') = ' '
THEN
DC_ALERT.OK ('PLU [' || PPLU || '] tidak terdaftar di Table PKM', 'Permintaan Barang');
RAISE FORM_TRIGGER_FAILURE;
END IF;

:DESKPDK := REC.PRD_DESKRIPSIPENDEK;
:SATUAN := REC.PRD_UNIT || '/' || TO_CHAR (NVL (REC.PRD_FRAC, 1));
:FRAC := REC.PRD_FRAC;
:UNIT := REC.PRD_UNIT;
:PBD_KODESUPPLIER := REC.HGB_KODESUPPLIER;
:SUPPLIER := REC.SUP_NAMASUPPLIER;
:MORD := REC.MIN_MINORDER;
:ISI_BELI := REC.PRD_ISIBELI;
:PKP := REC.PRD_FLAGBKP1;
:SUPPKP := REC.SUP_PKP;
---->>> Kotak Kanan Atas <<<----
:HG_JUAL := NVL (REC.PRD_HRGJUAL, 0);
:PBD_SALDOAKHIR := NVL (REC.ST_SALDOAKHIR, 0);

IF REC.MIN_MINORDER IS NULL
THEN
:MINOR := CASE NVL (REC.PRD_MINORDER, 0)
WHEN 0
THEN REC.PRD_ISIBELI
ELSE REC.PRD_MINORDER
END;
ELSE
:MINOR := REC.MIN_MINORDER;
END IF;

--->>> Cek Data PKM Gondola
IF REC.PKM_PRDCD IS NOT NULL
THEN
IF REC.GDL_PRDCD IS NOT NULL
THEN
IF REC.PKMG_PRDCD IS NOT NULL
THEN
:PBD_PKMT := REC.PKMG_NILAIPKMG;                               --/Rec.PRD_FRAC;
ELSE
:PBD_PKMT := REC.PKM_PKMT;                                     --/Rec.PRD_FRAC;
END IF;
ELSE
:PBD_PKMT := REC.PKM_PKMT;                                         --/Rec.PRD_FRAC;
END IF;
END IF;

--------------<<<<<>>>>>-----------
:F_OMI := CASE NVL (REC.PLUOMI, ' ')
WHEN ' '
THEN 'N'
ELSE 'Y'
END;
:F_IDM := CASE NVL (REC.PLUIDM, ' ')
WHEN ' '
THEN 'N'
ELSE 'Y'
END;
:PBD_HRGSATUAN := REC.HGB_HRGBELI * REC.PRD_FRAC;

--->>> Hitung Data Discount <<<---
IF NVL (REC.HGB_PERSENDISC01, 0) <> 0
THEN
:PBD_PERSENDISC1 := REC.HGB_PERSENDISC01;
:PBD_RPHDISC1 := 0;
:PBD_FLAGDISC1 := ' ';
ELSE
:PBD_PERSENDISC1 := 0;
:PBD_RPHDISC1 := REC.HGB_RPHDISC01;
:PBD_FLAGDISC1 := REC.HGB_FLAGDISC01;
END IF;

:PBD_PPNBM := REC.HGB_PPNBM * REC.PRD_FRAC;
:PBD_PPNBOTOL := REC.HGB_PPNBOTOL * REC.PRD_FRAC;
:PBD_BONUSPO1 := 0;

:PBD_BONUSPO2 := 0;
:PBD_QTYBPB := 0;
:PBD_BONUSBPB1 := 0;
:PBD_BONUSBPB2 := 0;
:PBD_RPHTTLDISC := 0;
:PBD_OSTPB := 0;
:PBD_OSTPO := 0;

IF REC.SUP_FLAGOPENTOP = 'Y'
THEN
:PBD_TOP := REC.HGB_TOP;
ELSE
IF REC.SUP_KONDISIPBYKONSINYASI IS NOT NULL
THEN
:PBD_TOP := REC.SUP_KONDISIPBYKONSINYASI;
ELSE
:PBD_TOP := REC.SUP_KONDISIPBYKREDIT;
END IF;
END IF;

IF TRUNC (SYSDATE) >= REC.HGB_TGLMULAIDISC02 AND TRUNC (SYSDATE) <= REC.HGB_TGLAKHIRDISC02
THEN
:PBD_PERSENDISC2 := NVL (REC.HGB_PERSENDISC02, 0);
:PBD_RPHDISC2 := NVL (REC.HGB_RPHDISC02, 0);
END IF;
END LOOP;

IF VLPLU = FALSE
THEN
DC_ALERT.OK ('PLU [' || PPLU || '] tidak terdaftar di Master Barang', 'Permintaan Barang');
RAISE FORM_TRIGGER_FAILURE;
END IF;
END;